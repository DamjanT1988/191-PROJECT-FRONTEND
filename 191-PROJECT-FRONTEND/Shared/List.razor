@inject HttpClient Http

<strong>@Title</strong>

    @if (products == null)
    {
        <p><em>Loading products..</em></p>
    }

    else
    {
        <ul>
            @foreach (var product in products)
            {
            <article>
                <h3>@product.Product_title <br />Article #@product.Id</h3>

                <br />
                <strong>Product title:</strong>
                <p className="list">@product.Product_title</p>

                <strong>Article number:</strong>
                <p>@product.Id</p>

                <strong>EAN number:</strong>
                <p>@product.Ean_number</p>

                <strong>Product description:</strong>
                <p>@product.Product_description</p>

                <strong>Selling price:</strong>
                <p>@($"{product.Price:C}") kr</p>

                <strong>Amount in storage:</strong>
                <p id="storage">@product.Amount_storage</p>

                <strong>Expiration date:</strong>
                <p>@product.Expiration_date</p>

                <strong>Category:</strong>
                <p>@product.Category</p>

                <strong>Natíonality:</strong>
                <p>@product.IsSwedish</p>
                <br />
                <hr />
            </article>
            }
        </ul>
    }

    @code {
        private Product[]? products;

        protected override async Task OnInitializedAsync()
        {
        products = await Http.GetFromJsonAsync<Product[]>("https://localhost:7090/api/ProductAPI/");
        }

        private class Product
        {
        //data fields
        public int Id { get; set; }

        //user input and object properties
        public string? Product_title { get; set; }
        public string? Ean_number { get; set; }
        public string? Product_description { get; set; }
        public double? Price { get; set; }
        public int? Amount_storage { get; set; }
        public string? Expiration_date { get; set; }
        public int? Category { get; set; }
        public bool? IsSwedish { get; set; }
        public string? Image_path { get; set; }
        public string? Image_file { get; set; }
        }

    // Demonstrates how a parent component can supply parameters
    [Parameter]
    public string? Title { get; set; }
    }
